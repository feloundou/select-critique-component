{"ast":null,"code":"var _jsxFileName = \"/Users/tyna/code/select_critique_package/my_component/frontend/src/MyComponent.tsx\";\nimport React from 'react';\nimport { StreamlitComponentBase, withStreamlitConnection } from 'streamlit-component-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customContainer = {\n  width: '100%',\n  maxWidth: '100%',\n  minHeight: '1000px'\n};\nclass MyComponent extends StreamlitComponentBase {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      prompt: 'Why is the sky blue?',\n      tree: [[['Because God said so', []], ['Because of Raleigh scattering', []]]],\n      clicked: []\n    };\n    this.addToTree = (level, index, text, newNodes) => {\n      const tree = JSON.parse(JSON.stringify(this.state.tree));\n      tree[level] = tree[level] || [];\n      tree[level][index] = [text, newNodes];\n      this.setState({\n        tree\n      });\n    };\n    this.handleClick = (level, index) => {\n      const clicked = [...this.state.clicked];\n      clicked[level] = clicked[level] || [];\n      clicked[level][index] = true;\n      clicked[level][1 - index] = false;\n      this.setState({\n        clicked\n      });\n    };\n    this.renderNode = (level, index) => {\n      var _this$state$tree$leve, _this$state$tree$leve2, _this$state$clicked$l, _this$state$clicked$l2;\n      const content = (_this$state$tree$leve = this.state.tree[level]) === null || _this$state$tree$leve === void 0 ? void 0 : (_this$state$tree$leve2 = _this$state$tree$leve[index]) === null || _this$state$tree$leve2 === void 0 ? void 0 : _this$state$tree$leve2[0];\n      const isClicked = (_this$state$clicked$l = this.state.clicked[level]) === null || _this$state$clicked$l === void 0 ? void 0 : _this$state$clicked$l[index];\n      const otherButtonClicked = (_this$state$clicked$l2 = this.state.clicked[level]) === null || _this$state$clicked$l2 === void 0 ? void 0 : _this$state$clicked$l2[1 - index];\n      if (content) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column align-items-center\",\n          style: {\n            marginRight: index === 0 ? '2rem' : undefined,\n            marginLeft: index === 1 ? '2rem' : undefined\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.handleClick(level, index);\n            },\n            className: `btn btn-${isClicked ? 'secondary' : 'primary'} my-1`,\n            style: {\n              marginBottom: '1.5rem',\n              whiteSpace: 'normal',\n              width: '12rem'\n            } // Add white-space and width styles\n            ,\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              minHeight: '1.5rem'\n            },\n            children: !isClicked && otherButtonClicked && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'white',\n                fontStyle: 'italic'\n              },\n              children: \"This response was not selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this);\n      }\n      return null;\n    };\n    this.renderTextInput = (level, index) => {\n      var _this$state$clicked$l3;\n      const isClicked = (_this$state$clicked$l3 = this.state.clicked[level]) === null || _this$state$clicked$l3 === void 0 ? void 0 : _this$state$clicked$l3[index];\n      const handleKeyPress = event => {\n        if (event.key === 'Enter') {\n          const commentary = event.currentTarget.value;\n          this.handleClick(level, index);\n          this.addToTree(level + 1, index * 2, commentary, []);\n        }\n      };\n      const handleButtonClick = event => {\n        const commentary = event.currentTarget.previousSibling.value;\n        const clicked = [...this.state.clicked];\n        clicked[level] = clicked[level] || [];\n        clicked[level][index] = true;\n        clicked[level][1 - index] = false;\n        const tree = JSON.parse(JSON.stringify(this.state.tree));\n        const newNodes = level === 0 ? index === 0 ? [[\"God wanted us to be happy, and he made the sky to give us light and food\"], [\"God made the sky and gave it the color he deemed most beneficial for mankind\"]] : [[\"Rayleigh scattering is a scientific process that leads to the sky appearing blue\"], [\"Rayleigh scattering is the primary scientific reasoning that on most days, the sky appears blue\"]] : []; // For deeper levels, you can add more new nodes here\n\n        tree[level + 1] = tree[level + 1] || [];\n        tree[level + 1][index * 2] = [newNodes[0], []];\n        tree[level + 1][index * 2 + 1] = [newNodes[1], []];\n        this.setState({\n          clicked,\n          tree\n        });\n      };\n      if (isClicked) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          style: {\n            marginTop: '1rem',\n            width: '300px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            placeholder: \"Enter your commentary\",\n            id: `inputDefault_${level}_${index}`,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"button\",\n            id: `button-addon2_${level}_${index}`,\n            onClick: handleButtonClick,\n            children: \"Critique\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this);\n      }\n      return null;\n    };\n    this.render = () => {\n      const renderDividerAndNewNodes = (level, index) => {\n        var _this$state$clicked$l4, _this$state$tree, _this$state$tree2;\n        const isClicked = (_this$state$clicked$l4 = this.state.clicked[level]) === null || _this$state$clicked$l4 === void 0 ? void 0 : _this$state$clicked$l4[index];\n        const newNodesExist = (_this$state$tree = this.state.tree[level + 1]) === null || _this$state$tree === void 0 ? void 0 : (_this$state$tree2 = _this$state$tree[index * 2]) === null || _this$state$tree2 === void 0 ? void 0 : _this$state$tree2[0];\n        if (isClicked && newNodesExist) {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-end',\n                marginTop: '2rem',\n                flexWrap: 'wrap' // Add flex-wrap style\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column align-items-center\",\n                children: [this.renderNode(level + 1, index * 2), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  defaultValue: \"50\",\n                  style: {\n                    width: '150px',\n                    marginTop: '1rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 17\n                }, this), this.renderTextInput(level + 1, index * 2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column align-items-center\",\n                children: [this.renderNode(level + 1, index * 2 + 1), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  defaultValue: \"50\",\n                  style: {\n                    width: '150px',\n                    marginTop: '1rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 17\n                }, this), this.renderTextInput(level + 1, index * 2 + 1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this);\n        }\n        return null;\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: customContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: '#007bff',\n              border: '1px solid #007bff',\n              borderRadius: '4px',\n              color: 'white',\n              padding: '0.5rem 1rem',\n              margin: '1rem',\n              pointerEvents: 'none'\n            },\n            children: this.state.prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'flex-end',\n              marginTop: '2rem',\n              flexWrap: 'wrap' // Add flex-wrap style\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                marginLeft: '-12rem',\n                marginRight: '-12rem',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column align-items-center\",\n                children: [this.renderNode(0, 0), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  defaultValue: \"50\",\n                  style: {\n                    width: '150px',\n                    marginTop: '1rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 17\n                }, this), this.renderTextInput(0, 0), renderDividerAndNewNodes(0, 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column align-items-center\",\n                children: [this.renderNode(0, 1), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"100\",\n                  defaultValue: \"50\",\n                  style: {\n                    width: '150px',\n                    marginTop: '1rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 17\n                }, this), this.renderTextInput(0, 1), renderDividerAndNewNodes(0, 1)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this);\n    };\n  }\n}\nexport default _c = withStreamlitConnection(MyComponent);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","StreamlitComponentBase","withStreamlitConnection","jsxDEV","_jsxDEV","customContainer","width","maxWidth","minHeight","MyComponent","constructor","arguments","state","prompt","tree","clicked","addToTree","level","index","text","newNodes","JSON","parse","stringify","setState","handleClick","renderNode","_this$state$tree$leve","_this$state$tree$leve2","_this$state$clicked$l","_this$state$clicked$l2","content","isClicked","otherButtonClicked","className","style","marginRight","undefined","marginLeft","children","onClick","marginBottom","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","color","fontStyle","renderTextInput","_this$state$clicked$l3","handleKeyPress","event","key","commentary","currentTarget","value","handleButtonClick","previousSibling","marginTop","type","placeholder","id","onKeyPress","render","renderDividerAndNewNodes","_this$state$clicked$l4","_this$state$tree","_this$state$tree2","newNodesExist","Fragment","flexWrap","min","max","defaultValue","flexDirection","backgroundColor","border","borderRadius","padding","margin","pointerEvents","_c","$RefreshReg$"],"sources":["/Users/tyna/code/select_critique_package/my_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport {\n    Streamlit, StreamlitComponentBase, withStreamlitConnection\n} from 'streamlit-component-lib';\n\ninterface State {\n  prompt: string;\n  tree: (string | string[][])[][];\n  clicked: boolean[][];\n}\n\nconst customContainer = {\n  width: '100%',\n  maxWidth: '100%',\n  minHeight: '1000px',\n};\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state: State = {\n    prompt: 'Why is the sky blue?',\n    tree: [\n      [\n        ['Because God said so', []],\n        ['Because of Raleigh scattering', []],\n      ],\n    ],\n    clicked: [],\n  };\n\n  private addToTree = (level: number, index: number, text: string, newNodes: string[][]) => {\n    const tree = JSON.parse(JSON.stringify(this.state.tree)) as (string | string[][])[][][];\n    tree[level] = tree[level] || [];\n    tree[level][index] = [text, newNodes];\n    this.setState({ tree });\n  };\n\n  private handleClick = (level: number, index: number) => {\n    const clicked = [...this.state.clicked] as boolean[][];\n    clicked[level] = clicked[level] || [];\n    clicked[level][index] = true;\n    clicked[level][1 - index] = false;\n    this.setState({ clicked });\n  };\n\n  private renderNode = (level: number, index: number) => {\n    const content = this.state.tree[level]?.[index]?.[0];\n    const isClicked = this.state.clicked[level]?.[index];\n    const otherButtonClicked = this.state.clicked[level]?.[1 - index];\n\n    if (content) {\n      return (\n        <div className=\"d-flex flex-column align-items-center\" style={{ marginRight: index === 0 ? '2rem' : undefined, marginLeft: index === 1 ? '2rem' : undefined }}>\n          <button\n            onClick={() => {\n              this.handleClick(level, index);\n            }}\n            className={`btn btn-${isClicked ? 'secondary' : 'primary'} my-1`}\n            style={{ marginBottom: '1.5rem', whiteSpace: 'normal', width: '12rem' }} // Add white-space and width styles\n          >\n            {content}\n          </button>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '1.5rem' }}>\n            {!isClicked && otherButtonClicked && (\n              <span style={{ color: 'white', fontStyle: 'italic' }}>\n                This response was not selected\n              </span>\n            )}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private renderTextInput = (level: number, index: number) => {\n    const isClicked = this.state.clicked[level]?.[index];\n\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        const commentary = event.currentTarget.value;\n        this.handleClick(level, index);\n        this.addToTree(level + 1, index * 2, commentary, []);\n      }\n    };\n\n    const handleButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n      const commentary = (event.currentTarget.previousSibling as HTMLInputElement).value;\n\n      const clicked = [...this.state.clicked] as boolean[][];\n      clicked[level] = clicked[level] || [];\n      clicked[level][index] = true;\n      clicked[level][1 - index] = false;\n\n      const tree = JSON.parse(JSON.stringify(this.state.tree)) as (string | string[][])[][][];\n      const newNodes = level === 0\n        ? index === 0\n          ? [\n            [\"God wanted us to be happy, and he made the sky to give us light and food\"],\n            [\"God made the sky and gave it the color he deemed most beneficial for mankind\"]\n          ]\n          : [\n            [\"Rayleigh scattering is a scientific process that leads to the sky appearing blue\"],\n            [\"Rayleigh scattering is the primary scientific reasoning that on most days, the sky appears blue\"]\n          ]\n        : []; // For deeper levels, you can add more new nodes here\n\n      tree[level + 1] = tree[level + 1] || [];\n      tree[level + 1][index * 2] = [newNodes[0], []];\n      tree[level + 1][index * 2 + 1] = [newNodes[1], []];\n\n      this.setState({ clicked, tree });\n    };\n\n    if (isClicked) {\n      return (\n        <div className=\"input-group mb-3\" style={{ marginTop: '1rem', width: '300px' }}>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter your commentary\"\n            id={`inputDefault_${level}_${index}`}\n            onKeyPress={handleKeyPress}\n          />\n          <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            id={`button-addon2_${level}_${index}`}\n            onClick={handleButtonClick}\n          >\n            Critique\n          </button>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  public render = (): ReactNode => {\n    const renderDividerAndNewNodes = (level: number, index: number) => {\n      const isClicked = this.state.clicked[level]?.[index];\n      const newNodesExist = this.state.tree[level + 1]?.[index * 2]?.[0];\n\n      if (isClicked && newNodesExist) {\n        return (\n          <React.Fragment>\n            <hr />\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'flex-end',\n                marginTop: '2rem',\n                flexWrap: 'wrap', // Add flex-wrap style\n              }}\n            >\n              <div className=\"d-flex flex-column align-items-center\">\n                {this.renderNode(level + 1, index * 2)}\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue=\"50\"\n                  style={{ width: '150px', marginTop: '1rem' }}\n                />\n                {this.renderTextInput(level + 1, index * 2)}\n              </div>\n              <div className=\"d-flex flex-column align-items-center\">\n                {this.renderNode(level + 1, index * 2 + 1)}\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue=\"50\"\n                  style={{ width: '150px', marginTop: '1rem' }}\n                />\n                {this.renderTextInput(level + 1, index * 2 + 1)}\n              </div>\n            </div>\n          </React.Fragment>\n        );\n      }\n      return null;\n    };\n\n    return (\n      <div className=\"container\" style={customContainer}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: '2rem',\n          }}\n        >\n          <button\n            style={{\n              backgroundColor: '#007bff',\n              border: '1px solid #007bff',\n              borderRadius: '4px',\n              color: 'white',\n              padding: '0.5rem 1rem',\n              margin: '1rem',\n              pointerEvents: 'none',\n            }}\n          >\n            {this.state.prompt}\n          </button>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'flex-end',\n              marginTop: '2rem',\n              flexWrap: 'wrap', // Add flex-wrap style\n            }}\n          >\n            <div style={{ display: 'flex', marginLeft: '-12rem', marginRight: '-12rem', flexWrap: 'wrap' }}>\n              <div className=\"d-flex flex-column align-items-center\">\n                {this.renderNode(0, 0)}\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue=\"50\"\n                  style={{ width: '150px', marginTop: '1rem' }}\n                />\n                {this.renderTextInput(0, 0)}\n                {renderDividerAndNewNodes(0, 0)}\n              </div>\n              <div className=\"d-flex flex-column align-items-center\">\n                {this.renderNode(0, 1)}\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"100\"\n                  defaultValue=\"50\"\n                  style={{ width: '150px', marginTop: '1rem' }}\n                />\n                {this.renderTextInput(0, 1)}\n                {renderDividerAndNewNodes(0, 1)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default withStreamlitConnection(MyComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}